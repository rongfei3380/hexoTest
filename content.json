{"meta":{"title":"chengfeir's 极客小屋","subtitle":"test subtitle","description":"chengfeir descrition","author":"chengfeir","url":"http://rongchengfei.com"},"pages":[{"title":"","date":"2018-05-08T10:01:32.130Z","updated":"2018-05-08T10:01:32.130Z","comments":true,"path":"hexo-admin-ehc-images.json","permalink":"http://rongchengfei.com/hexo-admin-ehc-images.json","excerpt":"","text":"[{\"name\":\"DASHENG-900x700-1.png\",\"date\":1518959551960},{\"name\":\"DASHENG-900x700-2.png\",\"date\":1518959599098},{\"name\":\"DASHENG-900x700-3.png\",\"date\":1518959609913},{\"name\":\"DASHENG-900x700-4.png\",\"date\":1518959618105}]"}],"posts":[{"title":"JavaScript学习—函数","slug":"JavaScript学习—函数","date":"2018-05-08T11:10:44.000Z","updated":"2018-05-08T11:11:17.264Z","comments":true,"path":"2018/05/08/JavaScript学习—函数/","link":"","permalink":"http://rongchengfei.com/2018/05/08/JavaScript学习—函数/","excerpt":"","text":"layout: posttitle: “JavaScript学习–函数”subtitle: “JavaScript 变量、赋值、对象和运算符”date: 2017-02-06 20:00:00author: “chengfeir”header-img: “img/post-bg-js-version.jpg”catalog: truetags: - JavaScript - JS 语法结构区分大小写 JavaScript是区分大小写的语言，但是HTML不支持大小写。 空格、换行符和格式控制符JavaScript会忽略程序中标识（token）之间的空格。也会忽略换行符。可以使用空格和换行符，形成一致的缩进来使代码整齐增进阅读性。 注释 支持的注释方式有“//” 和 “/ /”两种。 直接量（literal） 程序中直接使用的数据值。 标识符和保留字（reserved word） JavaScript标识符必须以字母、下划线(_)或美元符（$）开始，后续的字符可以是字母、数字、下划线或美元符，数字是不允许最为首字符出现的。下面为合法标识符： $ my_variable_name v1$ _dummy $str JavaScript 中的保留字不能去做标识符。 保留字 保留字 保留字 保留字 break do instanceof typeof case else new var catch finally return void continue for switch while debugger* function this with default if throw delete in try ECMAScript 还有其他限制 可选的分号 JavaScript中的分号是可选的，对于分号 内存管理机制 自动垃圾回收 garbage collection 函数函数以关键字 function 开头声明 function plus1 (x) { return x+1; }","categories":[],"tags":[]},{"title":"Markdown 基础语法","slug":"Markdown-基础语法","date":"2018-05-08T11:08:35.000Z","updated":"2018-05-08T11:08:39.459Z","comments":true,"path":"2018/05/08/Markdown-基础语法/","link":"","permalink":"http://rongchengfei.com/2018/05/08/Markdown-基础语法/","excerpt":"","text":"一级标题二级标题三级标题四级标题五级标题六级标题 上面是一条分割线 这是无序列表项目 这是无序列表项目 这是无序列表项目 两个列表之间不能相邻，否则会解释为嵌套的列表 这是有序列表项目 这是有序列表项目 这是有序列表项目 上面也是一条分割线 这里是引用 这里是粗体 这里是斜体 ++这是有下划线++ 表示未完成 表示已完成","categories":[],"tags":[]},{"title":"Hexo-Admin","slug":"Hello-From-Admin","date":"2018-05-04T10:38:00.000Z","updated":"2018-05-08T10:52:48.373Z","comments":true,"path":"2018/05/04/Hello-From-Admin/","link":"","permalink":"http://rongchengfei.com/2018/05/04/Hello-From-Admin/","excerpt":"","text":"admin简化hexo的编辑发布流程，可视化编辑让hexo用的更方便。使用了一个升级版插件 hexo-admin-qiniu。 Quick Start安装hexo-admin插件并开始使用hexo-admin 需要依赖hexo server 的服务，虽然主博客使用nginx，但是此插件暂不支持。 12$ npm install --save hexo-admin-qiniu$ hexo server -p 8888 //指定端口开启 浏览地址为： http://localhost:8888/admin/ 端口占用有时启动服务失败，需要查看端口的占用情况，避免端口冲突查看占用情况1$ ps -v 干掉进程1kill -9 pid 指定端口启动1$ hexo server -p 8888 123456789FATAL Port 8888 has been used. Try other port instead.FATAL Something's wrong. Maybe you can find the solution &amp;here: http://hexo.io/docs/troubleshooting.htmlError: listen EADDRINUSE 0.0.0.0:8888 at Object.exports._errnoException (util.js:1018:11) at exports._exceptionWithHostPort (util.js:1041:20) at Server._listen2 (net.js:1258:14) at listen (net.js:1294:10) at net.js:1404:9 at _combinedTickCallback (internal/process/next_tick.js:83:11) at process._tickCallback (internal/process/next_tick.js:104:9)","categories":[{"name":"hexo","slug":"hexo","permalink":"http://rongchengfei.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://rongchengfei.com/tags/hexo/"},{"name":"hexo-admin","slug":"hexo-admin","permalink":"http://rongchengfei.com/tags/hexo-admin/"}]},{"title":"2017-05-08-JavaScript学习—基本语法","slug":"2017-02-05-JavaScript学习—基本语法","date":"2017-05-08T11:09:00.000Z","updated":"2018-05-08T11:10:14.007Z","comments":true,"path":"2017/05/08/2017-02-05-JavaScript学习—基本语法/","link":"","permalink":"http://rongchengfei.com/2017/05/08/2017-02-05-JavaScript学习—基本语法/","excerpt":"","text":"layout: posttitle: “JavaScript学习–基本语法”subtitle: “JavaScript 变量、赋值、对象和运算符”date: 2017-02-05 20:00:00author: “chengfeir”header-img: “img/post-bg-js-version.jpg”catalog: truetags: - JavaScript - JS 代码示例下载http://shop.oreilly.com/product/9780596805531.do http://examples.oreilly.com/9780596805531/ 调试工具Firefox 上的调试工具 FireBug下载地址：http://getfirebug.com/ 调试语法使用console.log() 向控制台输出消息 也可以使用alter() 函数传入一段文本来弹出一个对话框 变量和赋值声明一个变量，JS的变量与OC的变量不同，没有明显的数据类型。 var x; 给变量赋值 x = 1； // 数字 x = 0.01; // 整数和实数共用一种数据类型 x = &quot;hello world&quot;; // 由双引号内的文本构成字符串 x = &apos;JavaScript&apos;; // 由单引号内的文本构成字符串 x = true; // 布尔值 x = false; x = null; // null 空 x = undefined; // 和null 类似 对象和数组以book对象为例 var book = { topic:&quot;JavaScript&quot;， fat:true }; 通过”.” 或 “[]” 来访问对象属性 book.topic =&gt; &quot;JavaScript&quot; book[&quot;fat&quot;] =&gt; true 还可以通过赋值，创建一个新的属性 book.author = &quot;Flanagan&quot; book.contents = {}; // {}是一个空对象，没有属性 JavaScript 同样支持数组，以数字为索引的列表 var primes = [2, 3, 5, 7]; primes[0] =&gt; 2 // 数组第一个元素 索引为0 primes.length =&gt; 4 // 数组中的元素个数 通过赋值可以添加元素和改变已有的元素 primes[4] = 9; // 添加 索引为4 的元素9 primes[4] = 11; // 通过赋值改变 索引为4 的元素 数组和对象中都可以包含另一个数组或对象 var points = [ {x:0 ,y:0}, {x:1, y:1} ]; // 具有两个元素的数组，每个数组都是一个对象 var data = { trial1:[[1, 2], [3, 4]], trial2:[[2, 3], [4, 5]] };// 一个包含两个属性的对象，每一个属性都是数组，数组的元素也是数组 运算符（operator）与OC不同的一点，在于 + 可以作字符串连接 &quot;3&quot; + &quot;2&quot; =&gt; &quot;32&quot;","categories":[],"tags":[]}]}